//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Warehouse.WCF_SendTelProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF_SendTelProxy.IWCF_SendTelProxy", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IWCF_SendTelProxy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_SendTelProxy/Init", ReplyAction="http://tempuri.org/IWCF_SendTelProxy/InitResponse")]
        void Init(string name, string addr, int SendPort, int timeoutSec, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_SendTelProxy/Init", ReplyAction="http://tempuri.org/IWCF_SendTelProxy/InitResponse")]
        System.Threading.Tasks.Task InitAsync(string name, string addr, int SendPort, int timeoutSec, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_SendTelProxy/Send", ReplyAction="http://tempuri.org/IWCF_SendTelProxy/SendResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Telegrams.TelegramCraneStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Telegrams.TelegramCraneTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Telegrams.TelegramTransportTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Telegrams.TelegramTransportStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Telegrams.TelegramTransportSetTime))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Telegrams.TelegramLife))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Telegrams.TelegramACK))]
        void Send(Telegrams.Telegram t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCF_SendTelProxy/Send", ReplyAction="http://tempuri.org/IWCF_SendTelProxy/SendResponse")]
        System.Threading.Tasks.Task SendAsync(Telegrams.Telegram t);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCF_SendTelProxyChannel : Warehouse.WCF_SendTelProxy.IWCF_SendTelProxy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCF_SendTelProxyClient : System.ServiceModel.ClientBase<Warehouse.WCF_SendTelProxy.IWCF_SendTelProxy>, Warehouse.WCF_SendTelProxy.IWCF_SendTelProxy {
        
        public WCF_SendTelProxyClient() {
        }
        
        public WCF_SendTelProxyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCF_SendTelProxyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCF_SendTelProxyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCF_SendTelProxyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Init(string name, string addr, int SendPort, int timeoutSec, string version) {
            base.Channel.Init(name, addr, SendPort, timeoutSec, version);
        }
        
        public System.Threading.Tasks.Task InitAsync(string name, string addr, int SendPort, int timeoutSec, string version) {
            return base.Channel.InitAsync(name, addr, SendPort, timeoutSec, version);
        }
        
        public void Send(Telegrams.Telegram t) {
            base.Channel.Send(t);
        }
        
        public System.Threading.Tasks.Task SendAsync(Telegrams.Telegram t) {
            return base.Channel.SendAsync(t);
        }
    }
}
